[
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "overview",
        "name": "lbServices",
        "module": "lbServices",
        "description": "The `lbServices` module provides services for interacting with\nthe models exposed by the LoopBack server via the REST API.",
        "parentDoc": {
            "type": "overview"
        },
        "file": "client/lb-services.js",
        "id": "lbServices",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "overview",
        "handler": "ngdoc",
        "search": "lbServices .overview:lbServices client/lb-services.js",
        "sortOn": "lbServices",
        "left": 1,
        "level": 0,
        "root": "lbServices",
        "right": 2
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.User",
        "header": "lbServices.User",
        "object": "",
        "description": "A $resource object for interacting with the `User` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.User",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.User undefined.object:lbServices.User client/lb-services.js",
        "sortOn": "lbServices.User",
        "left": 1,
        "level": 0,
        "root": "lbServices.User",
        "right": 112
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `include` – `{string=}` - Related objects to include in the response. See the description of return value for more details.\nDefault value: `user`.\n\n- `rememberMe` - `boolean` - Whether the authentication credentials\nshould be remembered in localStorage across app/browser restarts.\nDefault: `true`.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "login",
        "methodOf": "lbServices.User",
        "description": "Login a user with username/email and password",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThe response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n- `user` - `{User}` - Data of the currently logged in user. (`include=user`)",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "login",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "login undefined.method:login client/lb-services.js",
        "sortOn": "login",
        "left": 2,
        "level": 1,
        "root": "lbServices.User",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `access_token` – `{string}` - Do not supply this argument, it is automatically extracted from request headers.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "logout",
        "methodOf": "lbServices.User",
        "description": "Logout a user with access token",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "logout",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "logout undefined.method:logout client/lb-services.js",
        "sortOn": "logout",
        "left": 4,
        "level": 1,
        "root": "lbServices.User",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `uid` – `{string}` - \n\n- `token` – `{string}` - \n\n- `redirect` – `{string}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "confirm",
        "methodOf": "lbServices.User",
        "description": "Confirm a user registration with email verification token",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "confirm",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "confirm undefined.method:confirm client/lb-services.js",
        "sortOn": "confirm",
        "left": 6,
        "level": 1,
        "root": "lbServices.User",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "resetPassword",
        "methodOf": "lbServices.User",
        "description": "Reset password for a user with email",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "resetPassword",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "resetPassword undefined.method:resetPassword client/lb-services.js",
        "sortOn": "resetPassword",
        "left": 8,
        "level": 1,
        "root": "lbServices.User",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `credentials` – `{object}` -",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "createAndLink",
        "methodOf": "lbServices.User",
        "description": "Create a new Account and link with current social login.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThe response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n- `user` - `{User}` - Data of the currently logged in user. (`include=user`)",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "createAndLink",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "createAndLink undefined.method:createAndLink client/lb-services.js",
        "sortOn": "createAndLink",
        "left": 10,
        "level": 1,
        "root": "lbServices.User",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `include` – `{string=}` - Related objects to include in the response. See the description of return value for more details.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `credentials` – `{object}` -",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "link",
        "methodOf": "lbServices.User",
        "description": "Link Existing account with current social login.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThe response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n- `user` - `{User}` - Data of the currently logged in user. (`include=user`)",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "link",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "link undefined.method:link client/lb-services.js",
        "sortOn": "link",
        "left": 12,
        "level": 1,
        "root": "lbServices.User",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$createContact",
        "methodOf": "lbServices.User",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$createContact",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$createContact undefined.method:prototype$createContact client/lb-services.js",
        "sortOn": "prototype$createContact",
        "left": 14,
        "level": 1,
        "root": "lbServices.User",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$findContacts",
        "methodOf": "lbServices.User",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$findContacts",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$findContacts undefined.method:prototype$findContacts client/lb-services.js",
        "sortOn": "prototype$findContacts",
        "left": 16,
        "level": 1,
        "root": "lbServices.User",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `contactId` – `{*}` - Contact id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$deleteContactById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$deleteContactById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$deleteContactById undefined.method:prototype$deleteContactById client/lb-services.js",
        "sortOn": "prototype$deleteContactById",
        "left": 18,
        "level": 1,
        "root": "lbServices.User",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$getChatRooms",
        "methodOf": "lbServices.User",
        "description": "Find all instances of the model from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$getChatRooms",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$getChatRooms undefined.method:prototype$getChatRooms client/lb-services.js",
        "sortOn": "prototype$getChatRooms",
        "left": 20,
        "level": 1,
        "root": "lbServices.User",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$createChatRoom",
        "methodOf": "lbServices.User",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$createChatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$createChatRoom undefined.method:prototype$createChatRoom client/lb-services.js",
        "sortOn": "prototype$createChatRoom",
        "left": 22,
        "level": 1,
        "root": "lbServices.User",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$startConversation",
        "methodOf": "lbServices.User",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$startConversation",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$startConversation undefined.method:prototype$startConversation client/lb-services.js",
        "sortOn": "prototype$startConversation",
        "left": 24,
        "level": 1,
        "root": "lbServices.User",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `url` – `{string=}` - Url to be scraped.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$getParseUrl",
        "methodOf": "lbServices.User",
        "description": "Find all instances of the model from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$getParseUrl",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$getParseUrl undefined.method:prototype$getParseUrl client/lb-services.js",
        "sortOn": "prototype$getParseUrl",
        "left": 26,
        "level": 1,
        "root": "lbServices.User",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for identities",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__findById__identities",
        "methodOf": "lbServices.User",
        "description": "Find a related item by id for identities",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__findById__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__findById__identities undefined.method:prototype$__findById__identities client/lb-services.js",
        "sortOn": "prototype$__findById__identities",
        "left": 28,
        "level": 1,
        "root": "lbServices.User",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for identities",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__destroyById__identities",
        "methodOf": "lbServices.User",
        "description": "Delete a related item by id for identities",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__destroyById__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__destroyById__identities undefined.method:prototype$__destroyById__identities client/lb-services.js",
        "sortOn": "prototype$__destroyById__identities",
        "left": 30,
        "level": 1,
        "root": "lbServices.User",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for identities",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__updateById__identities",
        "methodOf": "lbServices.User",
        "description": "Update a related item by id for identities",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__updateById__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__updateById__identities undefined.method:prototype$__updateById__identities client/lb-services.js",
        "sortOn": "prototype$__updateById__identities",
        "left": 32,
        "level": 1,
        "root": "lbServices.User",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for credentials",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__findById__credentials",
        "methodOf": "lbServices.User",
        "description": "Find a related item by id for credentials",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__findById__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__findById__credentials undefined.method:prototype$__findById__credentials client/lb-services.js",
        "sortOn": "prototype$__findById__credentials",
        "left": 34,
        "level": 1,
        "root": "lbServices.User",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for credentials",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__destroyById__credentials",
        "methodOf": "lbServices.User",
        "description": "Delete a related item by id for credentials",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__destroyById__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__destroyById__credentials undefined.method:prototype$__destroyById__credentials client/lb-services.js",
        "sortOn": "prototype$__destroyById__credentials",
        "left": 36,
        "level": 1,
        "root": "lbServices.User",
        "right": 37
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for credentials",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__updateById__credentials",
        "methodOf": "lbServices.User",
        "description": "Update a related item by id for credentials",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__updateById__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__updateById__credentials undefined.method:prototype$__updateById__credentials client/lb-services.js",
        "sortOn": "prototype$__updateById__credentials",
        "left": 38,
        "level": 1,
        "root": "lbServices.User",
        "right": 39
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__findById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Find a related item by id for accessTokens",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__findById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__findById__accessTokens undefined.method:prototype$__findById__accessTokens client/lb-services.js",
        "sortOn": "prototype$__findById__accessTokens",
        "left": 40,
        "level": 1,
        "root": "lbServices.User",
        "right": 41
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__destroyById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Delete a related item by id for accessTokens",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__destroyById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__destroyById__accessTokens undefined.method:prototype$__destroyById__accessTokens client/lb-services.js",
        "sortOn": "prototype$__destroyById__accessTokens",
        "left": 42,
        "level": 1,
        "root": "lbServices.User",
        "right": 43
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for accessTokens",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__updateById__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Update a related item by id for accessTokens",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__updateById__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__updateById__accessTokens undefined.method:prototype$__updateById__accessTokens client/lb-services.js",
        "sortOn": "prototype$__updateById__accessTokens",
        "left": 44,
        "level": 1,
        "root": "lbServices.User",
        "right": 45
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__get__identities",
        "methodOf": "lbServices.User",
        "description": "Queries identities of user.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__get__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__get__identities undefined.method:prototype$__get__identities client/lb-services.js",
        "sortOn": "prototype$__get__identities",
        "left": 46,
        "level": 1,
        "root": "lbServices.User",
        "right": 47
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__create__identities",
        "methodOf": "lbServices.User",
        "description": "Creates a new instance in identities of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__create__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__create__identities undefined.method:prototype$__create__identities client/lb-services.js",
        "sortOn": "prototype$__create__identities",
        "left": 48,
        "level": 1,
        "root": "lbServices.User",
        "right": 49
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__delete__identities",
        "methodOf": "lbServices.User",
        "description": "Deletes all identities of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__delete__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__delete__identities undefined.method:prototype$__delete__identities client/lb-services.js",
        "sortOn": "prototype$__delete__identities",
        "left": 50,
        "level": 1,
        "root": "lbServices.User",
        "right": 51
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__count__identities",
        "methodOf": "lbServices.User",
        "description": "Counts identities of user.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__count__identities",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__count__identities undefined.method:prototype$__count__identities client/lb-services.js",
        "sortOn": "prototype$__count__identities",
        "left": 52,
        "level": 1,
        "root": "lbServices.User",
        "right": 53
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__get__credentials",
        "methodOf": "lbServices.User",
        "description": "Queries credentials of user.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__get__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__get__credentials undefined.method:prototype$__get__credentials client/lb-services.js",
        "sortOn": "prototype$__get__credentials",
        "left": 54,
        "level": 1,
        "root": "lbServices.User",
        "right": 55
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__create__credentials",
        "methodOf": "lbServices.User",
        "description": "Creates a new instance in credentials of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__create__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__create__credentials undefined.method:prototype$__create__credentials client/lb-services.js",
        "sortOn": "prototype$__create__credentials",
        "left": 56,
        "level": 1,
        "root": "lbServices.User",
        "right": 57
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__delete__credentials",
        "methodOf": "lbServices.User",
        "description": "Deletes all credentials of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__delete__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__delete__credentials undefined.method:prototype$__delete__credentials client/lb-services.js",
        "sortOn": "prototype$__delete__credentials",
        "left": 58,
        "level": 1,
        "root": "lbServices.User",
        "right": 59
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__count__credentials",
        "methodOf": "lbServices.User",
        "description": "Counts credentials of user.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__count__credentials",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__count__credentials undefined.method:prototype$__count__credentials client/lb-services.js",
        "sortOn": "prototype$__count__credentials",
        "left": 60,
        "level": 1,
        "root": "lbServices.User",
        "right": 61
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__get__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Queries accessTokens of user.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__get__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__get__accessTokens undefined.method:prototype$__get__accessTokens client/lb-services.js",
        "sortOn": "prototype$__get__accessTokens",
        "left": 62,
        "level": 1,
        "root": "lbServices.User",
        "right": 63
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__create__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Creates a new instance in accessTokens of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__create__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__create__accessTokens undefined.method:prototype$__create__accessTokens client/lb-services.js",
        "sortOn": "prototype$__create__accessTokens",
        "left": 64,
        "level": 1,
        "root": "lbServices.User",
        "right": 65
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__delete__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Deletes all accessTokens of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__delete__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__delete__accessTokens undefined.method:prototype$__delete__accessTokens client/lb-services.js",
        "sortOn": "prototype$__delete__accessTokens",
        "left": 66,
        "level": 1,
        "root": "lbServices.User",
        "right": 67
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$__count__accessTokens",
        "methodOf": "lbServices.User",
        "description": "Counts accessTokens of user.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$__count__accessTokens",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$__count__accessTokens undefined.method:prototype$__count__accessTokens client/lb-services.js",
        "sortOn": "prototype$__count__accessTokens",
        "left": 68,
        "level": 1,
        "root": "lbServices.User",
        "right": 69
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.User",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 70,
        "level": 1,
        "root": "lbServices.User",
        "right": 71
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.User",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert client/lb-services.js",
        "sortOn": "upsert",
        "left": 72,
        "level": 1,
        "root": "lbServices.User",
        "right": 73
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.User",
        "description": "Check whether a model instance exists in the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists client/lb-services.js",
        "sortOn": "exists",
        "left": 74,
        "level": 1,
        "root": "lbServices.User",
        "right": 75
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.User",
        "description": "Find a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 76,
        "level": 1,
        "root": "lbServices.User",
        "right": 77
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.User",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find client/lb-services.js",
        "sortOn": "find",
        "left": 78,
        "level": 1,
        "root": "lbServices.User",
        "right": 79
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.User",
        "description": "Find first instance of the model matched by filter from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne client/lb-services.js",
        "sortOn": "findOne",
        "left": 80,
        "level": 1,
        "root": "lbServices.User",
        "right": 81
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.User",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll client/lb-services.js",
        "sortOn": "updateAll",
        "left": 82,
        "level": 1,
        "root": "lbServices.User",
        "right": 83
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById client/lb-services.js",
        "sortOn": "deleteById",
        "left": 84,
        "level": 1,
        "root": "lbServices.User",
        "right": 85
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.User",
        "description": "Count instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 86,
        "level": 1,
        "root": "lbServices.User",
        "right": 87
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.User",
        "description": "Update attributes for a model instance and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes client/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 88,
        "level": 1,
        "root": "lbServices.User",
        "right": 89
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCurrent",
        "methodOf": "lbServices.User",
        "description": "Get data of the currently logged user. Fail with HTTP result 401\nwhen there is no user logged in.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "getCurrent",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCurrent undefined.method:getCurrent client/lb-services.js",
        "sortOn": "getCurrent",
        "left": 90,
        "level": 1,
        "root": "lbServices.User",
        "right": 91
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.User",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate client/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 92,
        "level": 1,
        "root": "lbServices.User",
        "right": 93
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.User",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update client/lb-services.js",
        "sortOn": "update",
        "left": 94,
        "level": 1,
        "root": "lbServices.User",
        "right": 95
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 96,
        "level": 1,
        "root": "lbServices.User",
        "right": 97
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.User",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById client/lb-services.js",
        "sortOn": "removeById",
        "left": 98,
        "level": 1,
        "root": "lbServices.User",
        "right": 99
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCachedCurrent",
        "methodOf": "lbServices.User",
        "description": "Get data of the currently logged user that was returned by the last\ncall to {@link lbServices.User#login} or\n{@link lbServices.User#getCurrent}. Return null when there\nis no user logged in or the data of the current user were not fetched\nyet.",
        "returns": "{Object} A User instance.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "getCachedCurrent",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCachedCurrent undefined.method:getCachedCurrent client/lb-services.js",
        "sortOn": "getCachedCurrent",
        "left": 100,
        "level": 1,
        "root": "lbServices.User",
        "right": 101
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "isAuthenticated",
        "methodOf": "lbServices.User",
        "returns": "{boolean} True if the current user is authenticated (logged in).",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "isAuthenticated",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "isAuthenticated undefined.method:isAuthenticated client/lb-services.js",
        "sortOn": "isAuthenticated",
        "left": 102,
        "level": 1,
        "root": "lbServices.User",
        "right": 103
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "getCurrentId",
        "methodOf": "lbServices.User",
        "returns": "{Object} Id of the currently logged-in user or null.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "getCurrentId",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "getCurrentId undefined.method:getCurrentId client/lb-services.js",
        "sortOn": "getCurrentId",
        "left": 104,
        "level": 1,
        "root": "lbServices.User",
        "right": 105
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.User",
        "description": "The name of the model represented by this $resource,\ni.e. `User`.",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName client/lb-services.js",
        "sortOn": "modelName",
        "left": 106,
        "level": 1,
        "root": "lbServices.User",
        "right": 107
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "events",
        "methodOf": "lbServices.User",
        "description": "Queries events of user.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "events",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "events undefined.method:events client/lb-services.js",
        "sortOn": "events",
        "left": 108,
        "level": 1,
        "root": "lbServices.User",
        "right": 109
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "apps",
        "methodOf": "lbServices.User",
        "description": "Queries apps of user.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User"
        },
        "file": "client/lb-services.js",
        "id": "apps",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "apps undefined.method:apps client/lb-services.js",
        "sortOn": "apps",
        "left": 110,
        "level": 1,
        "root": "lbServices.User",
        "right": 111
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.User.events",
        "header": "lbServices.User.events",
        "object": "",
        "description": "The object `User.events` groups methods\nmanipulating `Event` instances related to `User`.\n\nCall {@link lbServices.User#events User.events()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.User.events",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.User.events undefined.object:lbServices.User.events client/lb-services.js",
        "sortOn": "lbServices.User.events",
        "left": 1,
        "level": 0,
        "root": "lbServices.User.events",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.User.events",
        "description": "Counts events of user.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.User.events",
        "description": "Creates a new instance in events of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.User.events",
        "description": "Deletes all events of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for events",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.User.events",
        "description": "Delete a related item by id for events",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for events",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.User.events",
        "description": "Find a related item by id for events",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for events",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.User.events",
        "description": "Update a related item by id for events",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.events"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.User.events",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.User.apps",
        "header": "lbServices.User.apps",
        "object": "",
        "description": "The object `User.apps` groups methods\nmanipulating `App` instances related to `User`.\n\nCall {@link lbServices.User#apps User.apps()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.User.apps",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.User.apps undefined.object:lbServices.User.apps client/lb-services.js",
        "sortOn": "lbServices.User.apps",
        "left": 1,
        "level": 0,
        "root": "lbServices.User.apps",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.User.apps",
        "description": "Counts apps of user.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.User.apps",
        "description": "Creates a new instance in apps of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.User.apps",
        "description": "Deletes all apps of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for apps",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.User.apps",
        "description": "Delete a related item by id for apps",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for apps",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.User.apps",
        "description": "Find a related item by id for apps",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - User id\n\n- `fk` – `{*}` - Foreign key for apps",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.User.apps",
        "description": "Update a related item by id for apps",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.User.apps"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.User.apps",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.ChatRoom",
        "header": "lbServices.ChatRoom.event",
        "object": "",
        "description": "The object `ChatRoom.event` groups methods\nmanipulating `Event` instances related to `ChatRoom`.\n\nCall {@link lbServices.ChatRoom#event ChatRoom.event()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.ChatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.ChatRoom undefined.object:lbServices.ChatRoom client/lb-services.js",
        "sortOn": "lbServices.ChatRoom",
        "left": 1,
        "level": 0,
        "root": "lbServices.ChatRoom",
        "right": 48
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `data` – `{object=}` - Model instance data",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$addUsers",
        "methodOf": "lbServices.ChatRoom",
        "description": "Add users to ChatRoom",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nArray of new users",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "prototype$addUsers",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$addUsers undefined.method:prototype$addUsers client/lb-services.js",
        "sortOn": "prototype$addUsers",
        "left": 2,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `userId` – `{string}` - User id string to be removed",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$removeUser",
        "methodOf": "lbServices.ChatRoom",
        "description": "Add users to ChatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nNumber of affacted chatRooms",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "prototype$removeUser",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$removeUser undefined.method:prototype$removeUser client/lb-services.js",
        "sortOn": "prototype$removeUser",
        "left": 4,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\n- `data` – `{object=}` - Model instance data",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$changeName",
        "methodOf": "lbServices.ChatRoom",
        "description": "Change chatRoom name",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nNew chatRoom name.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "prototype$changeName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$changeName undefined.method:prototype$changeName client/lb-services.js",
        "sortOn": "prototype$changeName",
        "left": 6,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Creates a new instance in event of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 8,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.ChatRoom",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert client/lb-services.js",
        "sortOn": "upsert",
        "left": 10,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.ChatRoom",
        "description": "Check whether a model instance exists in the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists client/lb-services.js",
        "sortOn": "exists",
        "left": 12,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for event",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Find a related item by id for event",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 14,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.ChatRoom",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find client/lb-services.js",
        "sortOn": "find",
        "left": 16,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.ChatRoom",
        "description": "Find first instance of the model matched by filter from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne client/lb-services.js",
        "sortOn": "findOne",
        "left": 18,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.ChatRoom",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll client/lb-services.js",
        "sortOn": "updateAll",
        "left": 20,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.ChatRoom",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById client/lb-services.js",
        "sortOn": "deleteById",
        "left": 22,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Counts event of chatRoom.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 24,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.ChatRoom",
        "description": "Update attributes for a model instance and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes client/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 26,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.ChatRoom",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate client/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 28,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 29
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.ChatRoom",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update client/lb-services.js",
        "sortOn": "update",
        "left": 30,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for event",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Delete a related item by id for event",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 32,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.ChatRoom",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById client/lb-services.js",
        "sortOn": "removeById",
        "left": 34,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 35
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.ChatRoom",
        "description": "The name of the model represented by this $resource,\ni.e. `ChatRoom`.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName client/lb-services.js",
        "sortOn": "modelName",
        "left": 36,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 37
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "event",
        "methodOf": "lbServices.ChatRoom",
        "description": "Queries event of chatRoom.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "event",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "event undefined.method:event client/lb-services.js",
        "sortOn": "event",
        "left": 38,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 39
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Deletes all event of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 40,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 41
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for event",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.ChatRoom.event",
        "description": "Update a related item by id for event",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 42,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 43
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "app",
        "methodOf": "lbServices.ChatRoom",
        "description": "Fetches belongsTo relation app",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "app",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "app undefined.method:app client/lb-services.js",
        "sortOn": "app",
        "left": 44,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 45
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "appPage",
        "methodOf": "lbServices.ChatRoom",
        "description": "Fetches belongsTo relation appPage",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.ChatRoom"
        },
        "file": "client/lb-services.js",
        "id": "appPage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "appPage undefined.method:appPage client/lb-services.js",
        "sortOn": "appPage",
        "left": 46,
        "level": 1,
        "root": "lbServices.ChatRoom",
        "right": 47
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.Event",
        "header": "lbServices.Event",
        "object": "",
        "description": "A $resource object for interacting with the `Event` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.Event",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.Event undefined.object:lbServices.Event client/lb-services.js",
        "sortOn": "lbServices.Event",
        "left": 1,
        "level": 0,
        "root": "lbServices.Event",
        "right": 36
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.Event",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.Event",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.Event",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert client/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.Event",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.Event",
        "description": "Check whether a model instance exists in the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists client/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.Event",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.Event",
        "description": "Find a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.Event",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.Event",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find client/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.Event",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.Event",
        "description": "Find first instance of the model matched by filter from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne client/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.Event",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.Event",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll client/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.Event",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.Event",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById client/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.Event",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.Event",
        "description": "Count instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.Event",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.Event",
        "description": "Update attributes for a model instance and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes client/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.Event",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.Event",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `Event` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate client/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.Event",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.Event",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update client/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.Event",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.Event",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.Event",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.Event",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById client/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.Event",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.Event",
        "description": "The name of the model represented by this $resource,\ni.e. `Event`.",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName client/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.Event",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "chatRoom",
        "methodOf": "lbServices.Event",
        "description": "Fetches belongsTo relation chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "chatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "chatRoom undefined.method:chatRoom client/lb-services.js",
        "sortOn": "chatRoom",
        "left": 32,
        "level": 1,
        "root": "lbServices.Event",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "sender",
        "methodOf": "lbServices.Event",
        "description": "Fetches belongsTo relation sender",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.Event"
        },
        "file": "client/lb-services.js",
        "id": "sender",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "sender undefined.method:sender client/lb-services.js",
        "sortOn": "sender",
        "left": 34,
        "level": 1,
        "root": "lbServices.Event",
        "right": 35
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.App",
        "header": "lbServices.App",
        "object": "",
        "description": "A $resource object for interacting with the `App` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.App",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.App undefined.object:lbServices.App client/lb-services.js",
        "sortOn": "lbServices.App",
        "left": 1,
        "level": 0,
        "root": "lbServices.App",
        "right": 38
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.App",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.App",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.App",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert client/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.App",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.App",
        "description": "Check whether a model instance exists in the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists client/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.App",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.App",
        "description": "Find a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.App",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.App",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find client/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.App",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.App",
        "description": "Find first instance of the model matched by filter from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne client/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.App",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.App",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll client/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.App",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.App",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById client/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.App",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.App",
        "description": "Count instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.App",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.App",
        "description": "Update attributes for a model instance and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes client/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.App",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.App",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate client/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.App",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.App",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update client/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.App",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.App",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.App",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.App",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById client/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.App",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.App",
        "description": "The name of the model represented by this $resource,\ni.e. `App`.",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName client/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.App",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "user",
        "methodOf": "lbServices.App",
        "description": "Fetches belongsTo relation user",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `User` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "user",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "user undefined.method:user client/lb-services.js",
        "sortOn": "user",
        "left": 32,
        "level": 1,
        "root": "lbServices.App",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "chatRoom",
        "methodOf": "lbServices.App",
        "description": "Queries chatRoom of app.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "chatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "chatRoom undefined.method:chatRoom client/lb-services.js",
        "sortOn": "chatRoom",
        "left": 34,
        "level": 1,
        "root": "lbServices.App",
        "right": 35
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "appPage",
        "methodOf": "lbServices.App",
        "description": "Queries appPage of app.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App"
        },
        "file": "client/lb-services.js",
        "id": "appPage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "appPage undefined.method:appPage client/lb-services.js",
        "sortOn": "appPage",
        "left": 36,
        "level": 1,
        "root": "lbServices.App",
        "right": 37
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.App.chatRoom",
        "header": "lbServices.App.chatRoom",
        "object": "",
        "description": "The object `App.chatRoom` groups methods\nmanipulating `ChatRoom` instances related to `App`.\n\nCall {@link lbServices.App#chatRoom App.chatRoom()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.App.chatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.App.chatRoom undefined.object:lbServices.App.chatRoom client/lb-services.js",
        "sortOn": "lbServices.App.chatRoom",
        "left": 1,
        "level": 0,
        "root": "lbServices.App.chatRoom",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Counts chatRoom of app.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Creates a new instance in chatRoom of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Deletes all chatRoom of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Delete a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Find a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.App.chatRoom",
        "description": "Update a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.App.chatRoom",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.App.appPage",
        "header": "lbServices.App.appPage",
        "object": "",
        "description": "The object `App.appPage` groups methods\nmanipulating `AppPage` instances related to `App`.\n\nCall {@link lbServices.App#appPage App.appPage()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.App.appPage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.App.appPage undefined.object:lbServices.App.appPage client/lb-services.js",
        "sortOn": "lbServices.App.appPage",
        "left": 1,
        "level": 0,
        "root": "lbServices.App.appPage",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.App.appPage",
        "description": "Counts appPage of app.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.App.appPage",
        "description": "Creates a new instance in appPage of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.App.appPage",
        "description": "Deletes all appPage of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for appPage",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.App.appPage",
        "description": "Delete a related item by id for appPage",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for appPage",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.App.appPage",
        "description": "Find a related item by id for appPage",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for appPage",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.App.appPage",
        "description": "Update a related item by id for appPage",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.App.appPage"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.App.appPage",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.AppPage",
        "header": "lbServices.AppPage",
        "object": "",
        "description": "A $resource object for interacting with the `AppPage` model.\n\n## Example\n\nSee\n{@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\nfor an example of using this object.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.AppPage",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.AppPage undefined.object:lbServices.AppPage client/lb-services.js",
        "sortOn": "lbServices.AppPage",
        "left": 1,
        "level": 0,
        "root": "lbServices.AppPage",
        "right": 36
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.AppPage",
        "description": "Create a new instance of the model and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 2,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "upsert",
        "methodOf": "lbServices.AppPage",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "upsert",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "upsert undefined.method:upsert client/lb-services.js",
        "sortOn": "upsert",
        "left": 4,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "exists",
        "methodOf": "lbServices.AppPage",
        "description": "Check whether a model instance exists in the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `exists` – `{boolean=}` -",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "exists",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "exists undefined.method:exists client/lb-services.js",
        "sortOn": "exists",
        "left": 6,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.AppPage",
        "description": "Find a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 8,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "find",
        "methodOf": "lbServices.AppPage",
        "description": "Find all instances of the model matched by filter from the data source",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "find",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "find undefined.method:find client/lb-services.js",
        "sortOn": "find",
        "left": 10,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `filter` – `{object=}` - Filter defining fields, where, orderBy, offset, and limit",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findOne",
        "methodOf": "lbServices.AppPage",
        "description": "Find first instance of the model matched by filter from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "findOne",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findOne undefined.method:findOne client/lb-services.js",
        "sortOn": "findOne",
        "left": 12,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 13
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateAll",
        "methodOf": "lbServices.AppPage",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "updateAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateAll undefined.method:updateAll client/lb-services.js",
        "sortOn": "updateAll",
        "left": 14,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 15
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "deleteById",
        "methodOf": "lbServices.AppPage",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "deleteById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "deleteById undefined.method:deleteById client/lb-services.js",
        "sortOn": "deleteById",
        "left": 16,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 17
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.AppPage",
        "description": "Count instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 18,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 19
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "prototype$updateAttributes",
        "methodOf": "lbServices.AppPage",
        "description": "Update attributes for a model instance and persist it into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "prototype$updateAttributes",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "prototype$updateAttributes undefined.method:prototype$updateAttributes client/lb-services.js",
        "sortOn": "prototype$updateAttributes",
        "left": 20,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 21
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\nThis method does not accept any parameters.\nSupply an empty object or omit this argument altogether.",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateOrCreate",
        "methodOf": "lbServices.AppPage",
        "description": "Update an existing model instance or insert a new one into the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `AppPage` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "updateOrCreate",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateOrCreate undefined.method:updateOrCreate client/lb-services.js",
        "sortOn": "updateOrCreate",
        "left": 22,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 23
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "update",
        "methodOf": "lbServices.AppPage",
        "description": "Update instances of the model matched by where from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "update",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "update undefined.method:update client/lb-services.js",
        "sortOn": "update",
        "left": 24,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 25
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.AppPage",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 26,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 27
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - Model id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "removeById",
        "methodOf": "lbServices.AppPage",
        "description": "Delete a model instance by id from the data source",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "removeById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "removeById undefined.method:removeById client/lb-services.js",
        "sortOn": "removeById",
        "left": 28,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 29
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "property",
        "name": "modelName",
        "propertyOf": "lbServices.AppPage",
        "description": "The name of the model represented by this $resource,\ni.e. `AppPage`.",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "modelName",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "property",
        "handler": "ngdoc",
        "search": "modelName undefined.property:modelName client/lb-services.js",
        "sortOn": "modelName",
        "left": 30,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 31
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `refresh` – `{boolean=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "app",
        "methodOf": "lbServices.AppPage",
        "description": "Fetches belongsTo relation app",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `App` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "app",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "app undefined.method:app client/lb-services.js",
        "sortOn": "app",
        "left": 32,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 33
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `filter` – `{object=}` -",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Array.<Object>",
                        "type": "array.<object>"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "chatRoom",
        "methodOf": "lbServices.AppPage",
        "description": "Queries chatRoom of appPage.",
        "returns": "{Array.<Object>} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage"
        },
        "file": "client/lb-services.js",
        "id": "chatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "chatRoom undefined.method:chatRoom client/lb-services.js",
        "sortOn": "chatRoom",
        "left": 34,
        "level": 1,
        "root": "lbServices.AppPage",
        "right": 35
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.AppPage.chatRoom",
        "header": "lbServices.AppPage.chatRoom",
        "object": "",
        "description": "The object `AppPage.chatRoom` groups methods\nmanipulating `ChatRoom` instances related to `AppPage`.\n\nCall {@link lbServices.AppPage#chatRoom AppPage.chatRoom()}\nto query all related instances.",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.AppPage.chatRoom",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.AppPage.chatRoom undefined.object:lbServices.AppPage.chatRoom client/lb-services.js",
        "sortOn": "lbServices.AppPage.chatRoom",
        "left": 1,
        "level": 0,
        "root": "lbServices.AppPage.chatRoom",
        "right": 14
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `where` – `{object=}` - Criteria to match model instances",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "count",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Counts chatRoom of appPage.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nData properties:\n\n- `count` – `{number=}` -",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "count",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "count undefined.method:count client/lb-services.js",
        "sortOn": "count",
        "left": 2,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "create",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Creates a new instance in chatRoom of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "create",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "create undefined.method:create client/lb-services.js",
        "sortOn": "create",
        "left": 4,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 5
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyAll",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Deletes all chatRoom of this model.",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyAll",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyAll undefined.method:destroyAll client/lb-services.js",
        "sortOn": "destroyAll",
        "left": 6,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 7
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "destroyById",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Delete a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\nThis method returns no data.",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "destroyById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "destroyById undefined.method:destroyById client/lb-services.js",
        "sortOn": "destroyById",
        "left": 8,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 9
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "findById",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Find a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "findById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "findById undefined.method:findById client/lb-services.js",
        "sortOn": "findById",
        "left": 10,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 11
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "parameters",
                "altName": null,
                "description": "Request parameters.\n\n- `id` – `{*}` - PersistedModel id\n\n- `fk` – `{*}` - Foreign key for chatRoom",
                "optional": true,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "postData",
                "altName": null,
                "description": "Request data.\n\nThis method expects a subset of model properties as request parameters.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function",
                        "type": "function"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    },
                    {
                        "name": "Object",
                        "type": "object"
                    }
                ],
                "varName": "successCb",
                "altName": null,
                "description": "Success callback with two arguments: `value`, `responseHeaders`.",
                "optional": false,
                "defaultValue": null
            },
            {
                "type": [
                    {
                        "name": "function(Object)",
                        "type": "function"
                    }
                ],
                "varName": "errorCb",
                "altName": null,
                "description": "Error callback with one argument:\n`httpResponse`.",
                "optional": true,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "updateById",
        "methodOf": "lbServices.AppPage.chatRoom",
        "description": "Update a related item by id for chatRoom",
        "returns": "{Object} An empty reference that will be\npopulated with the actual data once the response is returned\nfrom the server.\n\n<em>\n(The remote method definition does not provide any description.\nThis usually means the response is a `ChatRoom` object.)\n</em>",
        "parentDoc": {
            "name": "lbServices.AppPage.chatRoom"
        },
        "file": "client/lb-services.js",
        "id": "updateById",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "updateById undefined.method:updateById client/lb-services.js",
        "sortOn": "updateById",
        "left": 12,
        "level": 1,
        "root": "lbServices.AppPage.chatRoom",
        "right": 13
    },
    {
        "params": [],
        "docType": "ngdoc",
        "ngdoc": "object",
        "name": "lbServices.LoopBackResourceProvider",
        "header": "lbServices.LoopBackResourceProvider",
        "description": "Use `LoopBackResourceProvider` to change the global configuration\nsettings used by all models. Note that the provider is available\nto Configuration Blocks only, see\n{@link https://docs.angularjs.org/guide/module#module-loading-dependencies Module Loading & Dependencies}\nfor more details.\n\n## Example\n\n```js\nangular.module('app')\n.config(function(LoopBackResourceProvider) {\nLoopBackResourceProvider.setAuthHeader('X-Access-Token');\n});\n```",
        "parentDoc": {},
        "file": "client/lb-services.js",
        "id": "lbServices.LoopBackResourceProvider",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "object",
        "handler": "ngdoc",
        "search": "lbServices.LoopBackResourceProvider undefined.object:lbServices.LoopBackResourceProvider client/lb-services.js",
        "sortOn": "lbServices.LoopBackResourceProvider",
        "left": 1,
        "level": 0,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 6
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "string",
                        "type": "string"
                    }
                ],
                "varName": "header",
                "altName": null,
                "description": "The header name to use, e.g. `X-Access-Token`",
                "optional": false,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "setAuthHeader",
        "methodOf": "lbServices.LoopBackResourceProvider",
        "description": "Configure the REST transport to use a different header for sending\nthe authentication token. It is sent in the `Authorization` header\nby default.",
        "parentDoc": {
            "name": "lbServices.LoopBackResourceProvider"
        },
        "file": "client/lb-services.js",
        "id": "setAuthHeader",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "setAuthHeader undefined.method:setAuthHeader client/lb-services.js",
        "sortOn": "setAuthHeader",
        "left": 2,
        "level": 1,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 3
    },
    {
        "params": [
            {
                "type": [
                    {
                        "name": "string",
                        "type": "string"
                    }
                ],
                "varName": "url",
                "altName": null,
                "description": "The URL to use, e.g. `/api` or `//example.com/api`.",
                "optional": false,
                "defaultValue": null
            }
        ],
        "docType": "ngdoc",
        "ngdoc": "method",
        "name": "setUrlBase",
        "methodOf": "lbServices.LoopBackResourceProvider",
        "description": "Change the URL of the REST API server. By default, the URL provided\nto the code generator (`lb-ng` or `grunt-loopback-sdk-angular`) is used.",
        "parentDoc": {
            "name": "lbServices.LoopBackResourceProvider"
        },
        "file": "client/lb-services.js",
        "id": "setUrlBase",
        "path": "loopback/lbServices",
        "groupId": 3,
        "type": "method",
        "handler": "ngdoc",
        "search": "setUrlBase undefined.method:setUrlBase client/lb-services.js",
        "sortOn": "setUrlBase",
        "left": 4,
        "level": 1,
        "root": "lbServices.LoopBackResourceProvider",
        "right": 5
    }
]